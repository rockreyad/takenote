# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI/CD

on:
  push:
    branches: ['main']

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install pnpm
        run: |
          npm install -g pnpm

      - name: Install dependencies
        run: |
          pnpm install
      - name: Setup environment variables
        run: |
          touch .env
          echo NODE_ENV=${{ vars.NODE_ENV }} >> .env 
          echo DATABASE_URL=${{ vars.DATABASE_URL }} >> .env   
          echo DIRECT_URL=${{ vars.DIRECT_URL }} >> .env   
          echo NEXTAUTH_URL=${{ vars.NEXTAUTH_URL }} >> .env   
          echo NEXTAUTH_SECRET=${{ vars.NEXTAUTH_SECRET }} >> .env   
          echo BACKEND_URL=${{ vars.BACKEND_URL }} >> .env   
          echo GOOGLE_CLIENT_ID=${{ vars.GOOGLE_CLIENT_ID }} >> .env   
          echo GOOGLE_CLIENT_SECRET=${{ vars.GOOGLE_CLIENT_SECRET }} >> .env   
          echo NEXT_PUBLIC_FILESTACK_API_KEY=${{ vars.NEXT_PUBLIC_FILESTACK_API_KEY }} >> .env   
          echo SENTRY_ORG=${{ vars.SENTRY_ORG }} >> .env   
          echo SENTRY_PROJECT=${{ vars.SENTRY_PROJECT }} >> .env   
          echo SENTRY_DSN=${{ vars.SENTRY_DSN }} >> .env   
          echo SENTRY_AUTH_TOKEN=${{ vars.SENTRY_AUTH_TOKEN }} >> .env  
          echo RESEND_API_KEY=${{ vars.RESEND_API_KEY }} >> .env  
          echo RECIPIENT_EMAIL=${{ vars.RECIPIENT_EMAIL }} >> .env  
          echo RESEND_TRANSCRIPTION_STATUS_EMAIL=${{ vars.RESEND_TRANSCRIPTION_STATUS_EMAIL }} >> .env  
          echo REDIS_HOST=${{ vars.REDIS_HOST }} >> .env  
          echo REDIS_USERNAME=${{ vars.REDIS_USERNAME }} >> .env  
          echo REDIS_PASSWORD=${{ vars.REDIS_PASSWORD }} >> .env  
          echo REDIS_PORT=${{ vars.REDIS_PORT }} >> .env 
          echo REDIS_TIMEOUT=${{ vars.REDIS_TIMEOUT }} >> .env 
          echo BASE_URL=${{ vars.BASE_URL }} >> .env

      - name: Build NextJS
        run: |
          pnpm build

      - name: Deploying to AWS
        run: |
          pm2 restart takenote
